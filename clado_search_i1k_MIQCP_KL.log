/homes/zdeng/.conda/envs/mltls/lib/python3.9/site-packages/torch/utils/data/dataloader.py:478: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 6, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
Prepare 2bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 2 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
Prepare 4bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 4 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
Prepare 8bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([0.0780], device='cuda:0'), 'top5': tensor([0.5000], device='cuda:0'), 'loss': tensor(6.9105, device='cuda:0'), 'time': 95.32480001449585}
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([44.4021], device='cuda:0'), 'top5': tensor([69.3260], device='cuda:0'), 'loss': tensor(2.6122, device='cuda:0'), 'time': 82.79599285125732}
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([75.9600], device='cuda:0'), 'top5': tensor([92.7022], device='cuda:0'), 'loss': tensor(0.9644, device='cuda:0'), 'time': 81.515056848526}
[MQBENCH] INFO: Disable observer and Disable quantize.
input of  conv1  is  x_post_act_fake_quantizer
input of  layer1.0.conv1  is  maxpool_post_act_fake_quantizer
input of  layer1.0.conv2  is  layer1_0_relu_post_act_fake_quantizer
input of  layer1.0.conv3  is  layer1_0_relu_1_post_act_fake_quantizer
input of  layer1.0.downsample.0  is  maxpool_post_act_fake_quantizer
input of  layer1.1.conv1  is  layer1_0_relu_2_post_act_fake_quantizer
input of  layer1.1.conv2  is  layer1_1_relu_post_act_fake_quantizer
input of  layer1.1.conv3  is  layer1_1_relu_1_post_act_fake_quantizer
input of  layer1.2.conv1  is  layer1_1_relu_2_post_act_fake_quantizer
input of  layer1.2.conv2  is  layer1_2_relu_post_act_fake_quantizer
input of  layer1.2.conv3  is  layer1_2_relu_1_post_act_fake_quantizer
input of  layer2.0.conv1  is  layer1_2_relu_2_post_act_fake_quantizer
input of  layer2.0.conv2  is  layer2_0_relu_post_act_fake_quantizer
input of  layer2.0.conv3  is  layer2_0_relu_1_post_act_fake_quantizer
input of  layer2.0.downsample.0  is  layer1_2_relu_2_post_act_fake_quantizer
input of  layer2.1.conv1  is  layer2_0_relu_2_post_act_fake_quantizer
input of  layer2.1.conv2  is  layer2_1_relu_post_act_fake_quantizer
input of  layer2.1.conv3  is  layer2_1_relu_1_post_act_fake_quantizer
input of  layer2.2.conv1  is  layer2_1_relu_2_post_act_fake_quantizer
input of  layer2.2.conv2  is  layer2_2_relu_post_act_fake_quantizer
input of  layer2.2.conv3  is  layer2_2_relu_1_post_act_fake_quantizer
input of  layer2.3.conv1  is  layer2_2_relu_2_post_act_fake_quantizer
input of  layer2.3.conv2  is  layer2_3_relu_post_act_fake_quantizer
input of  layer2.3.conv3  is  layer2_3_relu_1_post_act_fake_quantizer
input of  layer3.0.conv1  is  layer2_3_relu_2_post_act_fake_quantizer
input of  layer3.0.conv2  is  layer3_0_relu_post_act_fake_quantizer
input of  layer3.0.conv3  is  layer3_0_relu_1_post_act_fake_quantizer
input of  layer3.0.downsample.0  is  layer2_3_relu_2_post_act_fake_quantizer
input of  layer3.1.conv1  is  layer3_0_relu_2_post_act_fake_quantizer
input of  layer3.1.conv2  is  layer3_1_relu_post_act_fake_quantizer
input of  layer3.1.conv3  is  layer3_1_relu_1_post_act_fake_quantizer
input of  layer3.2.conv1  is  layer3_1_relu_2_post_act_fake_quantizer
input of  layer3.2.conv2  is  layer3_2_relu_post_act_fake_quantizer
input of  layer3.2.conv3  is  layer3_2_relu_1_post_act_fake_quantizer
input of  layer3.3.conv1  is  layer3_2_relu_2_post_act_fake_quantizer
input of  layer3.3.conv2  is  layer3_3_relu_post_act_fake_quantizer
input of  layer3.3.conv3  is  layer3_3_relu_1_post_act_fake_quantizer
input of  layer3.4.conv1  is  layer3_3_relu_2_post_act_fake_quantizer
input of  layer3.4.conv2  is  layer3_4_relu_post_act_fake_quantizer
input of  layer3.4.conv3  is  layer3_4_relu_1_post_act_fake_quantizer
input of  layer3.5.conv1  is  layer3_4_relu_2_post_act_fake_quantizer
input of  layer3.5.conv2  is  layer3_5_relu_post_act_fake_quantizer
input of  layer3.5.conv3  is  layer3_5_relu_1_post_act_fake_quantizer
input of  layer4.0.conv1  is  layer3_5_relu_2_post_act_fake_quantizer
input of  layer4.0.conv2  is  layer4_0_relu_post_act_fake_quantizer
input of  layer4.0.conv3  is  layer4_0_relu_1_post_act_fake_quantizer
input of  layer4.0.downsample.0  is  layer3_5_relu_2_post_act_fake_quantizer
input of  layer4.1.conv1  is  layer4_0_relu_2_post_act_fake_quantizer
input of  layer4.1.conv2  is  layer4_1_relu_post_act_fake_quantizer
input of  layer4.1.conv3  is  layer4_1_relu_1_post_act_fake_quantizer
input of  layer4.2.conv1  is  layer4_1_relu_2_post_act_fake_quantizer
input of  layer4.2.conv2  is  layer4_2_relu_post_act_fake_quantizer
input of  layer4.2.conv3  is  layer4_2_relu_1_post_act_fake_quantizer
input of  fc  is  flatten_post_act_fake_quantizer
index 0 layer layer1.0.conv1 scheme (8, 2)bits Ltilde 0.130510
index 1 layer layer1.0.conv1 scheme (8, 4)bits Ltilde 0.044633
index 2 layer layer1.0.conv1 scheme (8, 8)bits Ltilde 0.001955
index 3 layer layer1.0.conv2 scheme (8, 2)bits Ltilde 0.454489
index 4 layer layer1.0.conv2 scheme (8, 4)bits Ltilde 0.096717
index 5 layer layer1.0.conv2 scheme (8, 8)bits Ltilde 0.000384
index 6 layer layer1.0.conv3 scheme (8, 2)bits Ltilde 0.676383
index 7 layer layer1.0.conv3 scheme (8, 4)bits Ltilde 0.024555
index 8 layer layer1.0.conv3 scheme (8, 8)bits Ltilde 0.000159
index 9 layer layer1.0.downsample.0 scheme (8, 2)bits Ltilde 1.619576
index 10 layer layer1.0.downsample.0 scheme (8, 4)bits Ltilde 0.197855
index 11 layer layer1.0.downsample.0 scheme (8, 8)bits Ltilde 0.002924
index 12 layer layer1.1.conv1 scheme (8, 2)bits Ltilde 0.161679
index 13 layer layer1.1.conv1 scheme (8, 4)bits Ltilde 0.004693
index 14 layer layer1.1.conv1 scheme (8, 8)bits Ltilde 0.000088
index 15 layer layer1.1.conv2 scheme (8, 2)bits Ltilde 0.179423
index 16 layer layer1.1.conv2 scheme (8, 4)bits Ltilde 0.009516
index 17 layer layer1.1.conv2 scheme (8, 8)bits Ltilde 0.000305
index 18 layer layer1.1.conv3 scheme (8, 2)bits Ltilde 0.105572
index 19 layer layer1.1.conv3 scheme (8, 4)bits Ltilde 0.005363
index 20 layer layer1.1.conv3 scheme (8, 8)bits Ltilde 0.000033
index 21 layer layer1.2.conv1 scheme (8, 2)bits Ltilde 0.201656
index 22 layer layer1.2.conv1 scheme (8, 4)bits Ltilde 0.002117
index 23 layer layer1.2.conv1 scheme (8, 8)bits Ltilde 0.000083
index 24 layer layer1.2.conv2 scheme (8, 2)bits Ltilde 1.068692
index 25 layer layer1.2.conv2 scheme (8, 4)bits Ltilde 0.005736
index 26 layer layer1.2.conv2 scheme (8, 8)bits Ltilde 0.000073
index 27 layer layer1.2.conv3 scheme (8, 2)bits Ltilde 0.079466
index 28 layer layer1.2.conv3 scheme (8, 4)bits Ltilde 0.004822
index 29 layer layer1.2.conv3 scheme (8, 8)bits Ltilde 0.000033
index 30 layer layer2.0.conv1 scheme (8, 2)bits Ltilde 0.271540
index 31 layer layer2.0.conv1 scheme (8, 4)bits Ltilde 0.013600
index 32 layer layer2.0.conv1 scheme (8, 8)bits Ltilde 0.000175
index 33 layer layer2.0.conv2 scheme (8, 2)bits Ltilde 0.546789
index 34 layer layer2.0.conv2 scheme (8, 4)bits Ltilde 0.008969
index 35 layer layer2.0.conv2 scheme (8, 8)bits Ltilde 0.000053
index 36 layer layer2.0.conv3 scheme (8, 2)bits Ltilde 0.771775
index 37 layer layer2.0.conv3 scheme (8, 4)bits Ltilde 0.029354
index 38 layer layer2.0.conv3 scheme (8, 8)bits Ltilde 0.000289
index 39 layer layer2.0.downsample.0 scheme (8, 2)bits Ltilde 0.941005
index 40 layer layer2.0.downsample.0 scheme (8, 4)bits Ltilde 0.040544
index 41 layer layer2.0.downsample.0 scheme (8, 8)bits Ltilde 0.000390
index 42 layer layer2.1.conv1 scheme (8, 2)bits Ltilde 0.105454
index 43 layer layer2.1.conv1 scheme (8, 4)bits Ltilde 0.005313
index 44 layer layer2.1.conv1 scheme (8, 8)bits Ltilde 0.000048
index 45 layer layer2.1.conv2 scheme (8, 2)bits Ltilde 0.816042
index 46 layer layer2.1.conv2 scheme (8, 4)bits Ltilde 0.042021
index 47 layer layer2.1.conv2 scheme (8, 8)bits Ltilde 0.000116
index 48 layer layer2.1.conv3 scheme (8, 2)bits Ltilde 0.104554
index 49 layer layer2.1.conv3 scheme (8, 4)bits Ltilde 0.007859
index 50 layer layer2.1.conv3 scheme (8, 8)bits Ltilde 0.000070
index 51 layer layer2.2.conv1 scheme (8, 2)bits Ltilde 0.131168
index 52 layer layer2.2.conv1 scheme (8, 4)bits Ltilde 0.004014
index 53 layer layer2.2.conv1 scheme (8, 8)bits Ltilde 0.000048
index 54 layer layer2.2.conv2 scheme (8, 2)bits Ltilde 0.376178
index 55 layer layer2.2.conv2 scheme (8, 4)bits Ltilde 0.009405
index 56 layer layer2.2.conv2 scheme (8, 8)bits Ltilde 0.000049
index 57 layer layer2.2.conv3 scheme (8, 2)bits Ltilde 0.318067
index 58 layer layer2.2.conv3 scheme (8, 4)bits Ltilde 0.015219
index 59 layer layer2.2.conv3 scheme (8, 8)bits Ltilde 0.000109
index 60 layer layer2.3.conv1 scheme (8, 2)bits Ltilde 0.136781
index 61 layer layer2.3.conv1 scheme (8, 4)bits Ltilde 0.003471
index 62 layer layer2.3.conv1 scheme (8, 8)bits Ltilde 0.000048
index 63 layer layer2.3.conv2 scheme (8, 2)bits Ltilde 1.844815
index 64 layer layer2.3.conv2 scheme (8, 4)bits Ltilde 0.005531
index 65 layer layer2.3.conv2 scheme (8, 8)bits Ltilde 0.000043
index 66 layer layer2.3.conv3 scheme (8, 2)bits Ltilde 0.129237
index 67 layer layer2.3.conv3 scheme (8, 4)bits Ltilde 0.008010
index 68 layer layer2.3.conv3 scheme (8, 8)bits Ltilde 0.000052
index 69 layer layer3.0.conv1 scheme (8, 2)bits Ltilde 0.876981
index 70 layer layer3.0.conv1 scheme (8, 4)bits Ltilde 0.040769
index 71 layer layer3.0.conv1 scheme (8, 8)bits Ltilde 0.000173
index 72 layer layer3.0.conv2 scheme (8, 2)bits Ltilde 0.475966
index 73 layer layer3.0.conv2 scheme (8, 4)bits Ltilde 0.011949
index 74 layer layer3.0.conv2 scheme (8, 8)bits Ltilde 0.000057
index 75 layer layer3.0.conv3 scheme (8, 2)bits Ltilde 0.430296
index 76 layer layer3.0.conv3 scheme (8, 4)bits Ltilde 0.016251
index 77 layer layer3.0.conv3 scheme (8, 8)bits Ltilde 0.000176
index 78 layer layer3.0.downsample.0 scheme (8, 2)bits Ltilde 0.497442
index 79 layer layer3.0.downsample.0 scheme (8, 4)bits Ltilde 0.028993
index 80 layer layer3.0.downsample.0 scheme (8, 8)bits Ltilde 0.000305
index 81 layer layer3.1.conv1 scheme (8, 2)bits Ltilde 0.963626
index 82 layer layer3.1.conv1 scheme (8, 4)bits Ltilde 0.009459
index 83 layer layer3.1.conv1 scheme (8, 8)bits Ltilde 0.000117
index 84 layer layer3.1.conv2 scheme (8, 2)bits Ltilde 0.984308
index 85 layer layer3.1.conv2 scheme (8, 4)bits Ltilde 0.005547
index 86 layer layer3.1.conv2 scheme (8, 8)bits Ltilde 0.000159
index 87 layer layer3.1.conv3 scheme (8, 2)bits Ltilde 0.139234
index 88 layer layer3.1.conv3 scheme (8, 4)bits Ltilde 0.021862
index 89 layer layer3.1.conv3 scheme (8, 8)bits Ltilde 0.000458
index 90 layer layer3.2.conv1 scheme (8, 2)bits Ltilde 0.258662
index 91 layer layer3.2.conv1 scheme (8, 4)bits Ltilde 0.008449
index 92 layer layer3.2.conv1 scheme (8, 8)bits Ltilde 0.000136
index 93 layer layer3.2.conv2 scheme (8, 2)bits Ltilde 0.368568
index 94 layer layer3.2.conv2 scheme (8, 4)bits Ltilde 0.004828
index 95 layer layer3.2.conv2 scheme (8, 8)bits Ltilde 0.000057
index 96 layer layer3.2.conv3 scheme (8, 2)bits Ltilde 0.132564
index 97 layer layer3.2.conv3 scheme (8, 4)bits Ltilde 0.008387
index 98 layer layer3.2.conv3 scheme (8, 8)bits Ltilde 0.000196
index 99 layer layer3.3.conv1 scheme (8, 2)bits Ltilde 0.202566
index 100 layer layer3.3.conv1 scheme (8, 4)bits Ltilde 0.009295
index 101 layer layer3.3.conv1 scheme (8, 8)bits Ltilde 0.000132
index 102 layer layer3.3.conv2 scheme (8, 2)bits Ltilde 0.157479
index 103 layer layer3.3.conv2 scheme (8, 4)bits Ltilde 0.004814
index 104 layer layer3.3.conv2 scheme (8, 8)bits Ltilde 0.000070
index 105 layer layer3.3.conv3 scheme (8, 2)bits Ltilde 0.111898
index 106 layer layer3.3.conv3 scheme (8, 4)bits Ltilde 0.010517
index 107 layer layer3.3.conv3 scheme (8, 8)bits Ltilde 0.000240
index 108 layer layer3.4.conv1 scheme (8, 2)bits Ltilde 0.157150
index 109 layer layer3.4.conv1 scheme (8, 4)bits Ltilde 0.007120
index 110 layer layer3.4.conv1 scheme (8, 8)bits Ltilde 0.000209
index 111 layer layer3.4.conv2 scheme (8, 2)bits Ltilde 0.169621
index 112 layer layer3.4.conv2 scheme (8, 4)bits Ltilde 0.003393
index 113 layer layer3.4.conv2 scheme (8, 8)bits Ltilde 0.000057
index 114 layer layer3.4.conv3 scheme (8, 2)bits Ltilde 0.095449
index 115 layer layer3.4.conv3 scheme (8, 4)bits Ltilde 0.008421
index 116 layer layer3.4.conv3 scheme (8, 8)bits Ltilde 0.000262
index 117 layer layer3.5.conv1 scheme (8, 2)bits Ltilde 0.199734
index 118 layer layer3.5.conv1 scheme (8, 4)bits Ltilde 0.008992
index 119 layer layer3.5.conv1 scheme (8, 8)bits Ltilde 0.000241
index 120 layer layer3.5.conv2 scheme (8, 2)bits Ltilde 0.198102
index 121 layer layer3.5.conv2 scheme (8, 4)bits Ltilde 0.005014
index 122 layer layer3.5.conv2 scheme (8, 8)bits Ltilde 0.000169
index 123 layer layer3.5.conv3 scheme (8, 2)bits Ltilde 0.108387
index 124 layer layer3.5.conv3 scheme (8, 4)bits Ltilde 0.006871
index 125 layer layer3.5.conv3 scheme (8, 8)bits Ltilde 0.000092
index 126 layer layer4.0.conv1 scheme (8, 2)bits Ltilde 0.639170
index 127 layer layer4.0.conv1 scheme (8, 4)bits Ltilde 0.020045
index 128 layer layer4.0.conv1 scheme (8, 8)bits Ltilde 0.000867
index 129 layer layer4.0.conv2 scheme (8, 2)bits Ltilde 0.204934
index 130 layer layer4.0.conv2 scheme (8, 4)bits Ltilde 0.014597
index 131 layer layer4.0.conv2 scheme (8, 8)bits Ltilde 0.002124
index 132 layer layer4.0.conv3 scheme (8, 2)bits Ltilde 0.322082
index 133 layer layer4.0.conv3 scheme (8, 4)bits Ltilde 0.013111
index 134 layer layer4.0.conv3 scheme (8, 8)bits Ltilde 0.000917
index 135 layer layer4.0.downsample.0 scheme (8, 2)bits Ltilde 0.069120
index 136 layer layer4.0.downsample.0 scheme (8, 4)bits Ltilde 0.019811
index 137 layer layer4.0.downsample.0 scheme (8, 8)bits Ltilde 0.002520
index 138 layer layer4.1.conv1 scheme (8, 2)bits Ltilde 0.050847
index 139 layer layer4.1.conv1 scheme (8, 4)bits Ltilde 0.013978
index 140 layer layer4.1.conv1 scheme (8, 8)bits Ltilde 0.001773
index 141 layer layer4.1.conv2 scheme (8, 2)bits Ltilde 0.312828
index 142 layer layer4.1.conv2 scheme (8, 4)bits Ltilde 0.008358
index 143 layer layer4.1.conv2 scheme (8, 8)bits Ltilde 0.000120
index 144 layer layer4.1.conv3 scheme (8, 2)bits Ltilde 0.124703
index 145 layer layer4.1.conv3 scheme (8, 4)bits Ltilde 0.007513
index 146 layer layer4.1.conv3 scheme (8, 8)bits Ltilde 0.000185
index 147 layer layer4.2.conv1 scheme (8, 2)bits Ltilde 1.573955
index 148 layer layer4.2.conv1 scheme (8, 4)bits Ltilde 0.019228
index 149 layer layer4.2.conv1 scheme (8, 8)bits Ltilde 0.001251
index 150 layer layer4.2.conv2 scheme (8, 2)bits Ltilde 0.585869
index 151 layer layer4.2.conv2 scheme (8, 4)bits Ltilde 0.002401
index 152 layer layer4.2.conv2 scheme (8, 8)bits Ltilde 0.000090
index 153 layer layer4.2.conv3 scheme (8, 2)bits Ltilde 0.479285
index 154 layer layer4.2.conv3 scheme (8, 4)bits Ltilde 0.005710
index 155 layer layer4.2.conv3 scheme (8, 8)bits Ltilde 0.000193
Set size bound to 6.0 MB
Restricted license - for non-production use only - expires 2023-10-25

The optimal value is 173.32076330376367
A solution x is
[-0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  0.  1. -0.  1.  0.  0.  1.  0.
 -0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0. -0.  1.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  0.  1.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 19.383334666024894
A solution x is
[-0.  1. -0.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0.  0.  1. -0. -0.  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0. -0.
  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.
  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.040100250626566 MB

The optimal value is 161.239818917893
A solution x is
[-0.  1.  0. -0.  1. -0.  0.  1.  0.  0.  0.  1.  0.  1. -0.  0.  1.  0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0.  1. -0. -0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 2), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 2), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 18.9043077561073
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.080200501253133 MB

The optimal value is 150.4673716720231
A solution x is
[-0.  0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.  0. -0.  1. -0.
  1. -0.  0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  1.  0.  0.  1.  0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.
  1.  0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 18.269606684800237
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  1.  0. -0.  0.  1. -0.
  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0. -0.
  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.
  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.120300751879699 MB

The optimal value is 143.98850324959415
A solution x is
[-0.  1.  0. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1. -0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 17.788425283506513
A solution x is
[0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 2), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 2), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.160401002506266 MB

The optimal value is 135.24426034591454
A solution x is
[-0.  0.  1. -0. -0.  1.  0.  1.  0.  0.  0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 17.14017326524481
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.
  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1. -0. -0.  1.  0. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1.  0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1.  0. -0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.200501253132832 MB

The optimal value is 126.62471371460924
A solution x is
[0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 16.705326706869528
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.2406015037593985 MB

The optimal value is 119.32503059720977
A solution x is
[ 0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 16.11869505001232
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.
  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.280701754385965 MB

The optimal value is 114.03072535748151
A solution x is
[-0.  0.  1. -0.  1.  0.  0.  1.  0.  0.  0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0. -0. -0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 2), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 15.85038740147138
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.320802005012531 MB

The optimal value is 107.8129499367875
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1. -0.  0.  1.  0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0.  1.  0. -0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
 -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 15.360435095150024
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1. -0.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 2), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.360902255639098 MB

The optimal value is 100.18159741185082
A solution x is
[-0.  1.  0. -0.  1. -0. -0.  1.  0.  0.  0.  1. -0.  1. -0.  0.  1. -0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  1.  0.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.
  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 14.813118090387434
A solution x is
[-0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 2), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 2), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.401002506265664 MB

The optimal value is 96.53879027434778
A solution x is
[-0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0.  0.  1.  0.
 -0.  0.  1. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0.
  1. -0.  0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 14.182209011167288
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1.  0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 2), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.4411027568922306 MB

The optimal value is 90.56851603510506
A solution x is
[-0.  1. -0. -0. -0.  1.  0.  1. -0.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
 -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 13.645366022828966
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 2), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 2), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.481203007518797 MB

The optimal value is 84.16800779975893
A solution x is
[-0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0.  1.  0. -0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 13.153836064971983
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.521303258145363 MB

The optimal value is 80.14476852187363
A solution x is
[-0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0.  0.  1.  0.
 -0.  0.  1. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0.
  1.  0.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 12.757122923976567
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.56140350877193 MB

The optimal value is 74.8848374192304
A solution x is
[-0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.  0.  1. -0. -0.  1. -0.
 -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.
 -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 12.460020429454744
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1.  0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
  1.  0. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 2), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.601503759398496 MB

The optimal value is 73.47573466295353
A solution x is
[-0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  0.  1. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0.
  1.  0.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
 -0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 11.964379330631346
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 2), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.641604010025063 MB

The optimal value is 68.91738737591334
A solution x is
[-0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0.
  1.  0.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
 -0.  1. -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1. -0. -0.
 -0.  1. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 11.529532772256061
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0. -0.  0.  1.  0.  1.  0. -0.  0.  1.  0.  0.  1. -0.  1.  0.  0.
  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.
  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.
  0.  1. -0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.681704260651629 MB

The optimal value is 66.65814958317833
A solution x is
[-0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0.  0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 11.221771030686796
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  1. -0.  0.  0.  1. -0.  1. -0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.7218045112781954 MB

The optimal value is 64.22467130723965
A solution x is
[-0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
  1.  0.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
 -0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1. -0. -0.
 -0.  1. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 11.002256046573166
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 2), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.761904761904762 MB

The optimal value is 60.7722528071896
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0.
  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.
 -0.  1. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.
  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 10.592633534921333
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.802005012531328 MB

The optimal value is 59.64600439019125
A solution x is
[-0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 10.333664457779378
A solution x is
[-0. -0.  1.  0.  1.  0.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  1. -0. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.842105263157895 MB

The optimal value is 55.736605701458416
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  1.  0. -0.
 -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.  0.  1. -0.  0.  1.  0. -0.
  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.
  1. -0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 10.065356809238438
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.882205513784461 MB

The optimal value is 54.91587909834686
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 9.75445795734413
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  1.  0. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.
  0.  1.  0.  1.  0. -0.  1.  0.  0.  0.  1.  0.  1.  0. -0.  1.  0.  0.
  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.
  0.  1.  0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.
  1.  0. -0.  0.  1. -0.  1. -0.  0.  1.  0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.9223057644110275 MB

The optimal value is 52.056163450846384
A solution x is
[-0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.
 -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 9.637750092486385
A solution x is
[ 0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.
  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  1. -0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 2), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 6.962406015037594 MB

The optimal value is 49.68098774356952
A solution x is
[-0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0. -0. -0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1. -0.
 -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.
  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
 -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 9.21296535548754
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 2), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.00250626566416 MB

The optimal value is 48.48000573387253
A solution x is
[-0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  0.  1. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 9.019089499022812
A solution x is
[0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 4), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.042606516290727 MB

The optimal value is 45.88890893425298
A solution x is
[0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}

The optimal value is 8.7669722655628
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.082706766917293 MB

The optimal value is 43.955800565819686
A solution x is
[-0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  1.  0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 2), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 8.444940350251272
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.12280701754386 MB

The optimal value is 42.710904086663504
A solution x is
[-0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  0.  1. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  1.  0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 8.338017667643726
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.162907268170426 MB

The optimal value is 40.25648346557273
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0.
 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 8.085428054801014
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0.  0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.203007518796992 MB

The optimal value is 38.1843120797231
A solution x is
[-0.  1. -0.  0.  0.  1.  0.  1.  0.  0.  0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1.  0. -0.  1. -0.  0.  1.  0.  1.  0.  0. -0.  1. -0.  0.  1.  0.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.
  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.
  0.  1.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
 -0.  1.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 2), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 2), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.992022216320038
A solution x is
[ 0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.243107769423559 MB

The optimal value is 36.73503924965519
A solution x is
[-0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1. -0.  1. -0. -0.  1.  0.
 -0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1.  0.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.658009160666552
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.283208020050125 MB

The optimal value is 34.575244961829526
A solution x is
[0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.5027557231951505
A solution x is
[0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 4), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.323308270676692 MB

The optimal value is 33.56710978838737
A solution x is
[0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 2), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.331099114562676
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.
  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 2), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.363408521303258 MB

The optimal value is 31.635205457707002
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  1.  0. -0.
  0.  1.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0. -0.
  0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.
  1.  0. -0.  1.  0. -0.  1.  0.  0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.109593941255298
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.
  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.
  1. -0. -0.  0.  1. -0.  1. -0.  0.  1. -0. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
Set size bound to 7.4035087719298245 MB

The optimal value is 30.97948220747594
A solution x is
[-0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1. -0. -0.  0.  1.
 -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.
  0.  1.  0.  0.  0.  1. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0.  1. -0.
 -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.
 -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1.  0.  0.
 -0.  1.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 4), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 4), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 4), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 2), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 2), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 4)}

The optimal value is 7.035273507994134
A solution x is
[ 0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1. -0.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 2), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 2), 'layer3.3.conv3': (8, 2), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 2), 'layer3.4.conv3': (8, 2), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 2), 'layer3.5.conv3': (8, 2), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 2), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 2), 'layer4.2.conv3': (8, 2)}
evaluate_decision
 