/homes/zdeng/.conda/envs/mltls/lib/python3.9/site-packages/torch/utils/data/dataloader.py:478: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 6, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
Prepare 2bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 2 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
Prepare 4bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 4 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
Prepare 8bits model using MQBench
[MQBENCH] INFO: Quantize model Scheme: BackendType.Academic Mode: Eval
[MQBENCH] INFO: Weight Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      MSEObserver Params: Symmetric: True / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Activation Qconfig:
    FakeQuantize: FixedFakeQuantize Params: {}
    Oberver:      EMAMSEObserver Params: Symmetric: False / Bitwidth: 8 / Per channel: False / Pot scale: False / Extra kwargs: {}
[MQBENCH] INFO: Replace module to qat module.
[MQBENCH] INFO: Set layer conv1 to 8 bit.
[MQBENCH] INFO: Set layer fc to 8 bit.
dbg node_to_quantize_output
 odict_keys([x, maxpool, layer1_0_relu, layer1_0_relu_1, layer1_0_relu_2, layer1_1_relu, layer1_1_relu_1, layer1_1_relu_2, layer1_2_relu, layer1_2_relu_1, layer1_2_relu_2, layer2_0_relu, layer2_0_relu_1, layer2_0_relu_2, layer2_1_relu, layer2_1_relu_1, layer2_1_relu_2, layer2_2_relu, layer2_2_relu_1, layer2_2_relu_2, layer2_3_relu, layer2_3_relu_1, layer2_3_relu_2, layer3_0_relu, layer3_0_relu_1, layer3_0_relu_2, layer3_1_relu, layer3_1_relu_1, layer3_1_relu_2, layer3_2_relu, layer3_2_relu_1, layer3_2_relu_2, layer3_3_relu, layer3_3_relu_1, layer3_3_relu_2, layer3_4_relu, layer3_4_relu_1, layer3_4_relu_2, layer3_5_relu, layer3_5_relu_1, layer3_5_relu_2, layer4_0_relu, layer4_0_relu_1, layer4_0_relu_2, layer4_1_relu, layer4_1_relu_1, layer4_1_relu_2, layer4_2_relu, layer4_2_relu_1, flatten])
[MQBENCH] INFO: Set x post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant x_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant maxpool_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer1_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer2_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_2_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_3_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_4_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer3_5_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_0_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_1_relu_2_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_post_act_fake_quantizer
[MQBENCH] INFO: Insert act quant layer4_2_relu_1_post_act_fake_quantizer
[MQBENCH] INFO: Set flatten post act quantize to 8 bit.
[MQBENCH] INFO: Insert act quant flatten_post_act_fake_quantizer
[MQBENCH] INFO: Enable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([0.0780], device='cuda:0'), 'top5': tensor([0.5000], device='cuda:0'), 'loss': tensor(6.9105, device='cuda:0'), 'time': 91.72952198982239}
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([44.4021], device='cuda:0'), 'top5': tensor([69.3260], device='cuda:0'), 'loss': tensor(2.6122, device='cuda:0'), 'time': 79.92966485023499}
[MQBENCH] INFO: Disable observer and Disable quantize.
[MQBENCH] INFO: Disable observer and Enable quantize.
evaluate mqb quantized model
{'top1': tensor([75.9600], device='cuda:0'), 'top5': tensor([92.7022], device='cuda:0'), 'loss': tensor(0.9644, device='cuda:0'), 'time': 78.99526643753052}
[MQBENCH] INFO: Disable observer and Disable quantize.
input of  conv1  is  x_post_act_fake_quantizer
input of  layer1.0.conv1  is  maxpool_post_act_fake_quantizer
input of  layer1.0.conv2  is  layer1_0_relu_post_act_fake_quantizer
input of  layer1.0.conv3  is  layer1_0_relu_1_post_act_fake_quantizer
input of  layer1.0.downsample.0  is  maxpool_post_act_fake_quantizer
input of  layer1.1.conv1  is  layer1_0_relu_2_post_act_fake_quantizer
input of  layer1.1.conv2  is  layer1_1_relu_post_act_fake_quantizer
input of  layer1.1.conv3  is  layer1_1_relu_1_post_act_fake_quantizer
input of  layer1.2.conv1  is  layer1_1_relu_2_post_act_fake_quantizer
input of  layer1.2.conv2  is  layer1_2_relu_post_act_fake_quantizer
input of  layer1.2.conv3  is  layer1_2_relu_1_post_act_fake_quantizer
input of  layer2.0.conv1  is  layer1_2_relu_2_post_act_fake_quantizer
input of  layer2.0.conv2  is  layer2_0_relu_post_act_fake_quantizer
input of  layer2.0.conv3  is  layer2_0_relu_1_post_act_fake_quantizer
input of  layer2.0.downsample.0  is  layer1_2_relu_2_post_act_fake_quantizer
input of  layer2.1.conv1  is  layer2_0_relu_2_post_act_fake_quantizer
input of  layer2.1.conv2  is  layer2_1_relu_post_act_fake_quantizer
input of  layer2.1.conv3  is  layer2_1_relu_1_post_act_fake_quantizer
input of  layer2.2.conv1  is  layer2_1_relu_2_post_act_fake_quantizer
input of  layer2.2.conv2  is  layer2_2_relu_post_act_fake_quantizer
input of  layer2.2.conv3  is  layer2_2_relu_1_post_act_fake_quantizer
input of  layer2.3.conv1  is  layer2_2_relu_2_post_act_fake_quantizer
input of  layer2.3.conv2  is  layer2_3_relu_post_act_fake_quantizer
input of  layer2.3.conv3  is  layer2_3_relu_1_post_act_fake_quantizer
input of  layer3.0.conv1  is  layer2_3_relu_2_post_act_fake_quantizer
input of  layer3.0.conv2  is  layer3_0_relu_post_act_fake_quantizer
input of  layer3.0.conv3  is  layer3_0_relu_1_post_act_fake_quantizer
input of  layer3.0.downsample.0  is  layer2_3_relu_2_post_act_fake_quantizer
input of  layer3.1.conv1  is  layer3_0_relu_2_post_act_fake_quantizer
input of  layer3.1.conv2  is  layer3_1_relu_post_act_fake_quantizer
input of  layer3.1.conv3  is  layer3_1_relu_1_post_act_fake_quantizer
input of  layer3.2.conv1  is  layer3_1_relu_2_post_act_fake_quantizer
input of  layer3.2.conv2  is  layer3_2_relu_post_act_fake_quantizer
input of  layer3.2.conv3  is  layer3_2_relu_1_post_act_fake_quantizer
input of  layer3.3.conv1  is  layer3_2_relu_2_post_act_fake_quantizer
input of  layer3.3.conv2  is  layer3_3_relu_post_act_fake_quantizer
input of  layer3.3.conv3  is  layer3_3_relu_1_post_act_fake_quantizer
input of  layer3.4.conv1  is  layer3_3_relu_2_post_act_fake_quantizer
input of  layer3.4.conv2  is  layer3_4_relu_post_act_fake_quantizer
input of  layer3.4.conv3  is  layer3_4_relu_1_post_act_fake_quantizer
input of  layer3.5.conv1  is  layer3_4_relu_2_post_act_fake_quantizer
input of  layer3.5.conv2  is  layer3_5_relu_post_act_fake_quantizer
input of  layer3.5.conv3  is  layer3_5_relu_1_post_act_fake_quantizer
input of  layer4.0.conv1  is  layer3_5_relu_2_post_act_fake_quantizer
input of  layer4.0.conv2  is  layer4_0_relu_post_act_fake_quantizer
input of  layer4.0.conv3  is  layer4_0_relu_1_post_act_fake_quantizer
input of  layer4.0.downsample.0  is  layer3_5_relu_2_post_act_fake_quantizer
input of  layer4.1.conv1  is  layer4_0_relu_2_post_act_fake_quantizer
input of  layer4.1.conv2  is  layer4_1_relu_post_act_fake_quantizer
input of  layer4.1.conv3  is  layer4_1_relu_1_post_act_fake_quantizer
input of  layer4.2.conv1  is  layer4_1_relu_2_post_act_fake_quantizer
input of  layer4.2.conv2  is  layer4_2_relu_post_act_fake_quantizer
input of  layer4.2.conv3  is  layer4_2_relu_1_post_act_fake_quantizer
input of  fc  is  flatten_post_act_fake_quantizer
index 0 layer layer1.0.conv1 scheme (8, 2)bits Ltilde 0.130802
index 1 layer layer1.0.conv1 scheme (8, 4)bits Ltilde 0.054223
index 2 layer layer1.0.conv1 scheme (8, 8)bits Ltilde 0.004730
index 3 layer layer1.0.conv2 scheme (8, 2)bits Ltilde 0.356665
index 4 layer layer1.0.conv2 scheme (8, 4)bits Ltilde 0.097498
index 5 layer layer1.0.conv2 scheme (8, 8)bits Ltilde -0.000108
index 6 layer layer1.0.conv3 scheme (8, 2)bits Ltilde 0.693197
index 7 layer layer1.0.conv3 scheme (8, 4)bits Ltilde 0.016067
index 8 layer layer1.0.conv3 scheme (8, 8)bits Ltilde 0.000699
index 9 layer layer1.0.downsample.0 scheme (8, 2)bits Ltilde 1.486260
index 10 layer layer1.0.downsample.0 scheme (8, 4)bits Ltilde 0.194110
index 11 layer layer1.0.downsample.0 scheme (8, 8)bits Ltilde 0.005257
index 12 layer layer1.1.conv1 scheme (8, 2)bits Ltilde 0.134360
index 13 layer layer1.1.conv1 scheme (8, 4)bits Ltilde -0.003364
index 14 layer layer1.1.conv1 scheme (8, 8)bits Ltilde 0.000073
index 15 layer layer1.1.conv2 scheme (8, 2)bits Ltilde 0.140249
index 16 layer layer1.1.conv2 scheme (8, 4)bits Ltilde 0.007265
index 17 layer layer1.1.conv2 scheme (8, 8)bits Ltilde 0.001535
index 18 layer layer1.1.conv3 scheme (8, 2)bits Ltilde 0.092644
index 19 layer layer1.1.conv3 scheme (8, 4)bits Ltilde 0.005417
index 20 layer layer1.1.conv3 scheme (8, 8)bits Ltilde -0.000432
index 21 layer layer1.2.conv1 scheme (8, 2)bits Ltilde 0.188805
index 22 layer layer1.2.conv1 scheme (8, 4)bits Ltilde 0.002319
index 23 layer layer1.2.conv1 scheme (8, 8)bits Ltilde -0.000453
index 24 layer layer1.2.conv2 scheme (8, 2)bits Ltilde 1.005990
index 25 layer layer1.2.conv2 scheme (8, 4)bits Ltilde 0.001744
index 26 layer layer1.2.conv2 scheme (8, 8)bits Ltilde 0.000118
index 27 layer layer1.2.conv3 scheme (8, 2)bits Ltilde 0.072608
index 28 layer layer1.2.conv3 scheme (8, 4)bits Ltilde 0.004096
index 29 layer layer1.2.conv3 scheme (8, 8)bits Ltilde 0.000196
index 30 layer layer2.0.conv1 scheme (8, 2)bits Ltilde 0.267926
index 31 layer layer2.0.conv1 scheme (8, 4)bits Ltilde 0.019574
index 32 layer layer2.0.conv1 scheme (8, 8)bits Ltilde 0.000210
index 33 layer layer2.0.conv2 scheme (8, 2)bits Ltilde 0.496144
index 34 layer layer2.0.conv2 scheme (8, 4)bits Ltilde 0.011880
index 35 layer layer2.0.conv2 scheme (8, 8)bits Ltilde 0.000091
index 36 layer layer2.0.conv3 scheme (8, 2)bits Ltilde 0.797521
index 37 layer layer2.0.conv3 scheme (8, 4)bits Ltilde 0.031933
index 38 layer layer2.0.conv3 scheme (8, 8)bits Ltilde 0.000369
index 39 layer layer2.0.downsample.0 scheme (8, 2)bits Ltilde 0.978014
index 40 layer layer2.0.downsample.0 scheme (8, 4)bits Ltilde 0.037240
index 41 layer layer2.0.downsample.0 scheme (8, 8)bits Ltilde 0.000654
index 42 layer layer2.1.conv1 scheme (8, 2)bits Ltilde 0.092998
index 43 layer layer2.1.conv1 scheme (8, 4)bits Ltilde 0.003416
index 44 layer layer2.1.conv1 scheme (8, 8)bits Ltilde -0.000202
index 45 layer layer2.1.conv2 scheme (8, 2)bits Ltilde 0.775205
index 46 layer layer2.1.conv2 scheme (8, 4)bits Ltilde 0.033189
index 47 layer layer2.1.conv2 scheme (8, 8)bits Ltilde 0.000840
index 48 layer layer2.1.conv3 scheme (8, 2)bits Ltilde 0.102309
index 49 layer layer2.1.conv3 scheme (8, 4)bits Ltilde 0.009155
index 50 layer layer2.1.conv3 scheme (8, 8)bits Ltilde -0.000235
index 51 layer layer2.2.conv1 scheme (8, 2)bits Ltilde 0.137360
index 52 layer layer2.2.conv1 scheme (8, 4)bits Ltilde 0.005976
index 53 layer layer2.2.conv1 scheme (8, 8)bits Ltilde -0.000000
index 54 layer layer2.2.conv2 scheme (8, 2)bits Ltilde 0.352079
index 55 layer layer2.2.conv2 scheme (8, 4)bits Ltilde 0.008049
index 56 layer layer2.2.conv2 scheme (8, 8)bits Ltilde -0.000115
index 57 layer layer2.2.conv3 scheme (8, 2)bits Ltilde 0.313350
index 58 layer layer2.2.conv3 scheme (8, 4)bits Ltilde 0.018006
index 59 layer layer2.2.conv3 scheme (8, 8)bits Ltilde -0.000037
index 60 layer layer2.3.conv1 scheme (8, 2)bits Ltilde 0.116694
index 61 layer layer2.3.conv1 scheme (8, 4)bits Ltilde 0.005473
index 62 layer layer2.3.conv1 scheme (8, 8)bits Ltilde -0.000136
index 63 layer layer2.3.conv2 scheme (8, 2)bits Ltilde 1.723594
index 64 layer layer2.3.conv2 scheme (8, 4)bits Ltilde 0.004790
index 65 layer layer2.3.conv2 scheme (8, 8)bits Ltilde 0.000140
index 66 layer layer2.3.conv3 scheme (8, 2)bits Ltilde 0.103851
index 67 layer layer2.3.conv3 scheme (8, 4)bits Ltilde 0.004649
index 68 layer layer2.3.conv3 scheme (8, 8)bits Ltilde -0.000431
index 69 layer layer3.0.conv1 scheme (8, 2)bits Ltilde 0.883172
index 70 layer layer3.0.conv1 scheme (8, 4)bits Ltilde 0.042729
index 71 layer layer3.0.conv1 scheme (8, 8)bits Ltilde 0.001141
index 72 layer layer3.0.conv2 scheme (8, 2)bits Ltilde 0.435271
index 73 layer layer3.0.conv2 scheme (8, 4)bits Ltilde 0.015247
index 74 layer layer3.0.conv2 scheme (8, 8)bits Ltilde 0.000257
index 75 layer layer3.0.conv3 scheme (8, 2)bits Ltilde 0.416748
index 76 layer layer3.0.conv3 scheme (8, 4)bits Ltilde 0.001632
index 77 layer layer3.0.conv3 scheme (8, 8)bits Ltilde 0.000156
index 78 layer layer3.0.downsample.0 scheme (8, 2)bits Ltilde 0.483450
index 79 layer layer3.0.downsample.0 scheme (8, 4)bits Ltilde 0.026420
index 80 layer layer3.0.downsample.0 scheme (8, 8)bits Ltilde 0.000886
index 81 layer layer3.1.conv1 scheme (8, 2)bits Ltilde 0.996193
index 82 layer layer3.1.conv1 scheme (8, 4)bits Ltilde 0.010571
index 83 layer layer3.1.conv1 scheme (8, 8)bits Ltilde -0.000358
index 84 layer layer3.1.conv2 scheme (8, 2)bits Ltilde 0.969009
index 85 layer layer3.1.conv2 scheme (8, 4)bits Ltilde 0.005299
index 86 layer layer3.1.conv2 scheme (8, 8)bits Ltilde 0.000177
index 87 layer layer3.1.conv3 scheme (8, 2)bits Ltilde 0.138479
index 88 layer layer3.1.conv3 scheme (8, 4)bits Ltilde 0.017401
index 89 layer layer3.1.conv3 scheme (8, 8)bits Ltilde 0.000385
index 90 layer layer3.2.conv1 scheme (8, 2)bits Ltilde 0.252008
index 91 layer layer3.2.conv1 scheme (8, 4)bits Ltilde 0.006990
index 92 layer layer3.2.conv1 scheme (8, 8)bits Ltilde 0.000482
index 93 layer layer3.2.conv2 scheme (8, 2)bits Ltilde 0.344524
index 94 layer layer3.2.conv2 scheme (8, 4)bits Ltilde 0.005193
index 95 layer layer3.2.conv2 scheme (8, 8)bits Ltilde 0.000343
index 96 layer layer3.2.conv3 scheme (8, 2)bits Ltilde 0.123008
index 97 layer layer3.2.conv3 scheme (8, 4)bits Ltilde 0.010130
index 98 layer layer3.2.conv3 scheme (8, 8)bits Ltilde 0.000371
index 99 layer layer3.3.conv1 scheme (8, 2)bits Ltilde 0.178137
index 100 layer layer3.3.conv1 scheme (8, 4)bits Ltilde 0.008178
index 101 layer layer3.3.conv1 scheme (8, 8)bits Ltilde 0.000470
index 102 layer layer3.3.conv2 scheme (8, 2)bits Ltilde 0.155399
index 103 layer layer3.3.conv2 scheme (8, 4)bits Ltilde 0.003506
index 104 layer layer3.3.conv2 scheme (8, 8)bits Ltilde 0.000533
index 105 layer layer3.3.conv3 scheme (8, 2)bits Ltilde 0.105909
index 106 layer layer3.3.conv3 scheme (8, 4)bits Ltilde 0.009011
index 107 layer layer3.3.conv3 scheme (8, 8)bits Ltilde 0.001752
index 108 layer layer3.4.conv1 scheme (8, 2)bits Ltilde 0.147447
index 109 layer layer3.4.conv1 scheme (8, 4)bits Ltilde 0.010365
index 110 layer layer3.4.conv1 scheme (8, 8)bits Ltilde 0.000512
index 111 layer layer3.4.conv2 scheme (8, 2)bits Ltilde 0.155234
index 112 layer layer3.4.conv2 scheme (8, 4)bits Ltilde 0.002734
index 113 layer layer3.4.conv2 scheme (8, 8)bits Ltilde -0.000392
index 114 layer layer3.4.conv3 scheme (8, 2)bits Ltilde 0.093185
index 115 layer layer3.4.conv3 scheme (8, 4)bits Ltilde 0.010720
index 116 layer layer3.4.conv3 scheme (8, 8)bits Ltilde 0.001603
index 117 layer layer3.5.conv1 scheme (8, 2)bits Ltilde 0.201583
index 118 layer layer3.5.conv1 scheme (8, 4)bits Ltilde 0.004377
index 119 layer layer3.5.conv1 scheme (8, 8)bits Ltilde -0.000736
index 120 layer layer3.5.conv2 scheme (8, 2)bits Ltilde 0.238340
index 121 layer layer3.5.conv2 scheme (8, 4)bits Ltilde 0.005466
index 122 layer layer3.5.conv2 scheme (8, 8)bits Ltilde -0.000314
index 123 layer layer3.5.conv3 scheme (8, 2)bits Ltilde 0.100316
index 124 layer layer3.5.conv3 scheme (8, 4)bits Ltilde 0.005782
index 125 layer layer3.5.conv3 scheme (8, 8)bits Ltilde 0.000523
index 126 layer layer4.0.conv1 scheme (8, 2)bits Ltilde 0.600066
index 127 layer layer4.0.conv1 scheme (8, 4)bits Ltilde 0.004337
index 128 layer layer4.0.conv1 scheme (8, 8)bits Ltilde -0.000796
index 129 layer layer4.0.conv2 scheme (8, 2)bits Ltilde 0.195218
index 130 layer layer4.0.conv2 scheme (8, 4)bits Ltilde 0.010143
index 131 layer layer4.0.conv2 scheme (8, 8)bits Ltilde 0.001896
index 132 layer layer4.0.conv3 scheme (8, 2)bits Ltilde 0.318946
index 133 layer layer4.0.conv3 scheme (8, 4)bits Ltilde 0.003992
index 134 layer layer4.0.conv3 scheme (8, 8)bits Ltilde -0.001074
index 135 layer layer4.0.downsample.0 scheme (8, 2)bits Ltilde 0.060818
index 136 layer layer4.0.downsample.0 scheme (8, 4)bits Ltilde 0.021895
index 137 layer layer4.0.downsample.0 scheme (8, 8)bits Ltilde 0.004642
index 138 layer layer4.1.conv1 scheme (8, 2)bits Ltilde 0.039947
index 139 layer layer4.1.conv1 scheme (8, 4)bits Ltilde 0.010710
index 140 layer layer4.1.conv1 scheme (8, 8)bits Ltilde 0.003213
index 141 layer layer4.1.conv2 scheme (8, 2)bits Ltilde 0.363135
index 142 layer layer4.1.conv2 scheme (8, 4)bits Ltilde 0.015846
index 143 layer layer4.1.conv2 scheme (8, 8)bits Ltilde 0.000047
index 144 layer layer4.1.conv3 scheme (8, 2)bits Ltilde 0.142006
index 145 layer layer4.1.conv3 scheme (8, 4)bits Ltilde 0.010747
index 146 layer layer4.1.conv3 scheme (8, 8)bits Ltilde -0.001517
index 147 layer layer4.2.conv1 scheme (8, 2)bits Ltilde 1.527987
index 148 layer layer4.2.conv1 scheme (8, 4)bits Ltilde 0.001758
index 149 layer layer4.2.conv1 scheme (8, 8)bits Ltilde -0.000310
index 150 layer layer4.2.conv2 scheme (8, 2)bits Ltilde 0.557345
index 151 layer layer4.2.conv2 scheme (8, 4)bits Ltilde 0.003442
index 152 layer layer4.2.conv2 scheme (8, 8)bits Ltilde 0.000381
index 153 layer layer4.2.conv3 scheme (8, 2)bits Ltilde 0.461197
index 154 layer layer4.2.conv3 scheme (8, 4)bits Ltilde 0.000514
index 155 layer layer4.2.conv3 scheme (8, 8)bits Ltilde -0.000502
Set size bound to 10.0 MB
Restricted license - for non-production use only - expires 2023-10-25

The optimal value is 3.609655687079851
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.
 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 2), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 1.3620656728744507
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  1. -0.
  0. -0.  1.  0.  1.  0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.121212121212121 MB

The optimal value is 3.251084995965016
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  1.  0.
  0.  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  0.  1.  0.  1. -0.
  0.  0.  1.  0.  0.  1. -0.  1. -0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  1. -0.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1. -0.
  0.  1.  0.  0.  1.  0. -0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 4), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 1.20571768283844
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.242424242424242 MB

The optimal value is 2.826253166018489
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0.  1.  0. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1. -0.  0.  1.  0.
 -0.  1.  0.  0.  1. -0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1.  0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0.  1.  0. -0.  1. -0. -0.  1.  0. -0.
  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 1.110779047012329
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.
  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.363636363636363 MB

The optimal value is 2.622510996370977
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 1.06865394115448
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.484848484848484 MB

The optimal value is 2.4624730904129706
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 1.0319982767105103
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  1. -0. -0.  0.  1.  0.  1. -0. -0.  1. -0. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 2), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.606060606060606 MB

The optimal value is 2.3479753080769683
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1. -0.  1. -0.  0.  1. -0. -0.  1.  0.  0.  0.  1.  0.  1.  0.
  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1. -0.
  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.  1. -0.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.
  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.  0. -0.  1. -0.
  0.  1.  0. -0.  1.  0. -0.  1. -0.  0.  1. -0.  0.  1.  0. -0.  1. -0.
  0.  1. -0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.928236722946167
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 4), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 4), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.727272727272727 MB

The optimal value is 2.2306138662585226
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1. -0. -0.  1.
  0. -0.  1. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.
  0. -0.  1.  0.  0.  1. -0.  0.  1.  0.  1. -0.  0.  0.  1.  0. -0.  1.
  0.  1. -0.  0. -0.  1.  0.  1.  0. -0.  1. -0.  0.  1. -0.  0.  0.  1.
  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
  0.  1. -0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.
 -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.8069560527801514
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 4), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 4), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 4), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.848484848484848 MB

The optimal value is 2.132694335381302
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.
  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.
  0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.
 -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.7231326103210449
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1. -0.  0.  1.  0.  1. -0. -0.  1. -0. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 10.969696969696969 MB

The optimal value is 2.026399204879226
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1. -0.  0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0.  0.  1. -0. -0.  1.  0.  1.  0. -0.  1. -0. -0.  1.  0. -0.
 -0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.683719277381897
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 4), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.09090909090909 MB

The optimal value is 1.962914066536996
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  1.  0.
 -0.  1.  0.  0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0.  0.  1. -0. -0.  1.  0.  1. -0. -0.  1.  0. -0.  1.  0. -0.
 -0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.6510533094406128
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0. -0.  1.  0.  0.  1.  0.  1. -0.  0.  1.  0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.212121212121213 MB

The optimal value is 1.882723066809831
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  0.  1.
 -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1. -0.  0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0.  1. -0. -0.  1.  0. -0.
 -0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 2), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.6205796003341675
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.333333333333334 MB

The optimal value is 1.7667637517941444
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1.  0. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1. -0. -0.  0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.5958287715911865
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1.  0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 4), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 4), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.454545454545455 MB

The optimal value is 1.6667836759837087
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.5621044635772705
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0. -0.  0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.575757575757576 MB

The optimal value is 1.5858310729066716
A solution x is
[ 0. -0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0.  0.  1. -0. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0.  1. -0.
  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1. -0.  0.  0.  1.  0. -0.  1. -0.  1. -0.  0.  1. -0.  0.  0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
  0.  1. -0. -0.  1.  0.  0.  1. -0.  1. -0.  0.  1. -0. -0. -0.  1.  0.
 -0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.5442321300506592
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.696969696969697 MB

The optimal value is 1.4883361978421021
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 4), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.5150229930877686
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.818181818181818 MB

The optimal value is 1.3937802684445728
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.49316465854644775
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 11.93939393939394 MB

The optimal value is 1.287256472622687
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.473457932472229
A solution x is
[ 0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.06060606060606 MB

The optimal value is 1.201498623978182
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0.  1.  0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 4), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.45692121982574463
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.181818181818182 MB

The optimal value is 1.129960663901727
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.4374033212661743
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 2), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.303030303030303 MB

The optimal value is 1.0771258153867507
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.4185694456100464
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 4), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.424242424242424 MB

The optimal value is 1.0256526196987465
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.3987821340560913
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.545454545454545 MB

The optimal value is 0.9698312554862127
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.37907540798187256
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.666666666666668 MB

The optimal value is 0.9314122348199021
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1. -0. -0.  0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 2), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.35955750942230225
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.787878787878789 MB

The optimal value is 0.8848790117068006
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.34457457065582275
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0.  1. -0.  0.  1.  0.
  0. -0.  1.  0.  1. -0.  0.  0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 12.90909090909091 MB

The optimal value is 0.8385553310380942
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  1.  0.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.
  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  1. -0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0.  1. -0.  0.  1.  0.
  0.  1. -0. -0.  1. -0.  0.  1.  0.  0.  1.  0. -0.  1. -0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1. -0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.32915806770324707
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1.  0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1.  0.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.030303030303031 MB

The optimal value is 0.7986408426268667
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 4), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.3146393299102783
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1.  0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.151515151515152 MB

The optimal value is 0.7636696963991767
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.30162298679351807
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.272727272727273 MB

The optimal value is 0.7342391702058393
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2907097339630127
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1.  0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 4), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.393939393939394 MB

The optimal value is 0.6987685025114132
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1.  0. -0.  1. -0.
 -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.27769339084625244
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 4), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.515151515151516 MB

The optimal value is 0.6762221547222538
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0.  0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1.  0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1.  0.  0.  1. -0.
 -0.  1. -0. -0.  1.  0. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.26717543601989746
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 4), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.636363636363637 MB

The optimal value is 0.6564096363576368
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 4), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2569500207901001
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.757575757575758 MB

The optimal value is 0.6272925195098082
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  0.  1. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0.  0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 4), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2476499080657959
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 13.878787878787879 MB

The optimal value is 0.5993285858495341
A solution x is
[ 0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0. -0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1. -0.  1. -0.
  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  1. -0. -0.  1.  0.
  0.  1. -0. -0.  1. -0. -0.  1. -0.  0. -0.  1. -0.  1. -0.  0.  0.  1.
  0.  0.  1. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0. -0.  1.  0.  1.  0.
 -0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2446976900100708
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.0 MB

The optimal value is 0.5717784015606497
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  0.  1.  0.  1.  0.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2360912561416626
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.121212121212121 MB

The optimal value is 0.5641225255535431
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  0.  1. -0.  1. -0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  0.  1.  0.  1. -0.
 -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2331390380859375
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.242424242424242 MB

The optimal value is 0.5436846729226517
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2231215238571167
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.363636363636363 MB

The optimal value is 0.5240106364640127
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2201693058013916
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.484848484848484 MB

The optimal value is 0.5004276747332455
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2115628719329834
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.606060606060606 MB

The optimal value is 0.48905217208742613
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0. -0.  1. -0.  0.  1.  0. -0.  1. -0.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0.  1. -0.
  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  1. -0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0. -0.  1.  0.
  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  0.  1. -0.  1. -0.  0.  0.  1.
  0.  0.  1. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0. -0.  1.  0.  1.  0.
 -0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.2086106538772583
A solution x is
[-0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 4), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.727272727272727 MB

The optimal value is 0.4710996952913291
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.20129597187042236
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.848484848484848 MB

The optimal value is 0.46261448517257975
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1. -0. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0.  0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.20129597187042236
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 14.969696969696969 MB

The optimal value is 0.4478068839335805
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1.  0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0.  0.  1. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 4), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.1978607177734375
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.09090909090909 MB

The optimal value is 0.43900749399453787
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0.  1. -0. -0.  1.  0.
 -0.  1. -0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 4), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.19105136394500732
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.212121212121211 MB

The optimal value is 0.41753188413603937
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1. -0.  1.  0.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0.  1.  0.
  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0.  0.  1.  0.  0.  1.  0.  1. -0. -0.  0.  1.
  0.  1. -0. -0.  1.  0. -0.  1.  0.  0.  0.  1. -0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  1.  0.
 -0.  1.  0.  0.  0.  1.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.18809914588928223
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.333333333333334 MB

The optimal value is 0.4084055242200151
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  1. -0.
 -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.181351900100708
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.454545454545455 MB

The optimal value is 0.4005861231660077
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  1. -0.
 -0.  1.  0. -0.  0.  1. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.17834854125976562
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.575757575757576 MB

The optimal value is 0.38948610874363965
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0.  1. -0.  0.  0.  1. -0.  1. -0.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0. -0. -0.  1.
  0.  1. -0. -0.  0.  1.  0.  1.  0.  0.  0.  1. -0.  1. -0.  0.  0.  1.
  0.  0.  1. -0.  1. -0.  0.  0.  1. -0.  1. -0.  0. -0.  1.  0.  1.  0.
 -0.  1. -0.  0.  0.  1.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.17509889602661133
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.696969696969697 MB

The optimal value is 0.38681478874717357
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0.  1. -0.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0. -0. -0.  1.
  0.  1. -0. -0.  1. -0. -0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.
  0.  0.  1. -0.  1. -0.  0.  0.  1. -0.  1. -0.  0.  0.  1.  0.  1.  0.
 -0.  1. -0.  0.  0.  1.  0.  1. -0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.17214667797088623
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.818181818181818 MB

The optimal value is 0.3806365291804781
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1.  0. -0.  1. -0. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0.
 -0.  0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.16635799407958984
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 15.93939393939394 MB

The optimal value is 0.3718174808422958
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1. -0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.16340577602386475
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.060606060606062 MB

The optimal value is 0.36743116776720797
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1. -0. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.15654528141021729
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.18181818181818 MB

The optimal value is 0.3572101018009306
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1. -0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1. -0.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1. -0.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  1. -0.  0.  1.  0.  0.  0.  1.  0.  0.  1. -0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1. -0.  1.  0.  0. -0.  1.  0.  1.  0.
  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 4), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.1535930633544922
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1. -0.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.303030303030305 MB

The optimal value is 0.3505435032641202
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1. -0. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  1. -0.
 -0.  1.  0. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 4), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.14684581756591797
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0.  1.  0.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.424242424242426 MB

The optimal value is 0.3361425655327679
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1.  0. -0. -0.  1. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.14389359951019287
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  1.  0.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.545454545454547 MB

The optimal value is 0.3310163517460154
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1. -0. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1.  0. -0. -0.  1. -0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 4), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.14155137538909912
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.666666666666668 MB

The optimal value is 0.3186553704610873
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.13859915733337402
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0.  1. -0.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.78787878787879 MB

The optimal value is 0.3167128223449396
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0.  0.  1.  0. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1.  0.  1.  0. -0. -0.  1. -0.  0.  1.  0.  0.  1. -0.  1. -0.
  0.  1.  0. -0. -0.  1. -0.  1.  0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.1351025104522705
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 16.90909090909091 MB

The optimal value is 0.30538932182626866
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1. -0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.1318519115447998
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0.  1.  0.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.03030303030303 MB

The optimal value is 0.3032179390897767
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 4), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.1288996934890747
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0. -0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.151515151515152 MB

The optimal value is 0.29494776826241775
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.12494754791259766
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.272727272727273 MB

The optimal value is 0.2883776857779452
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.12199532985687256
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.393939393939394 MB

The optimal value is 0.28531768764484866
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 4), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}

The optimal value is 0.11965227127075195
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.515151515151516 MB

The optimal value is 0.2743481313540457
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  1.  0. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1.  0. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.11524808406829834
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.636363636363637 MB

The optimal value is 0.2743481313540457
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0.  1. -0. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 4), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 4), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.10995364189147949
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.757575757575758 MB

The optimal value is 0.26212883543938403
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1.  0.  1.  0. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.10899507999420166
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 17.87878787878788 MB

The optimal value is 0.26212883543938403
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 4), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.10604286193847656
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 4), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.0 MB

The optimal value is 0.2509335196914293
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.10025417804718018
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0.  0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.12121212121212 MB

The optimal value is 0.2509335196914293
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.09730195999145508
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.242424242424242 MB

The optimal value is 0.24448613623324889
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0940011739730835
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.363636363636363 MB

The optimal value is 0.24230786222646827
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1.  0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0910489559173584
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.484848484848484 MB

The optimal value is 0.24230786222646827
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.08805453777313232
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.606060606060606 MB

The optimal value is 0.23539690239617528
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.08510231971740723
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.727272727272727 MB

The optimal value is 0.23539690239617528
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.08386814594268799
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.84848484848485 MB

The optimal value is 0.23539690239617528
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.08091592788696289
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 18.96969696969697 MB

The optimal value is 0.23539690239617528
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.08091592788696289
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.090909090909093 MB

The optimal value is 0.2271036361797627
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.07792150974273682
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.21212121212121 MB

The optimal value is 0.2238621255744846
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0.  0.  0.  1.
 -0.  1.  0. -0. -0.  1. -0.  0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.07496929168701172
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.333333333333336 MB

The optimal value is 0.2238621255744846
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.07496929168701172
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 4), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.454545454545453 MB

The optimal value is 0.2139713310033784
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0745549201965332
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.575757575757578 MB

The optimal value is 0.2139713310033784
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.07362711429595947
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  1.  0.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.696969696969695 MB

The optimal value is 0.20558890077920466
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.07067489624023438
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 4), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.81818181818182 MB

The optimal value is 0.20558890077920466
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.06860828399658203
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 4), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 19.939393939393938 MB

The optimal value is 0.20558890077920466
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.
 -0.  0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0.  1.  0.  0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1.  0. -0.  1.  0.  1.  0.
 -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.06737411022186279
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.060606060606062 MB

The optimal value is 0.20558890077920466
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0644218921661377
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.18181818181818 MB

The optimal value is 0.20558890077920466
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.06142747402191162
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.303030303030305 MB

The optimal value is 0.20558890077920466
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05847525596618652
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.424242424242422 MB

The optimal value is 0.20558890077920466
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0.
 -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 4), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05847525596618652
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.545454545454547 MB

The optimal value is 0.19791384606303097
A solution x is
[ 0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1. -0. -0.  1.  0.  0.  1. -0. -0.  1. -0. -0.  1.
  0.  0.  1.  0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1. -0. -0.  1.  0. -0.  1. -0. -0.  1.
 -0.  1.  0.  0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
 -0. -0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05847525596618652
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 4), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.666666666666668 MB

The optimal value is 0.19788182747758754
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.057290077209472656
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1. -0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.78787878787879 MB

The optimal value is 0.1933882989014677
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1. -0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05433785915374756
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 20.90909090909091 MB

The optimal value is 0.1897814831960858
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05433785915374756
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 21.03030303030303 MB

The optimal value is 0.1897814831960858
A solution x is
[-0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1.  0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05433785915374756
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 21.151515151515152 MB

The optimal value is 0.1897814831960858
A solution x is
[-0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1.  0.  0.  1. -0.  0.  1. -0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
  0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1. -0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05433785915374756
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 1. 0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 4)}
Set size bound to 21.272727272727273 MB

The optimal value is 0.1897814831960858
A solution x is
[0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1.
 0. 0. 1. 0. 0. 1. 0. 1. 0. 0. 0. 1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0523068904876709
A solution x is
[-0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
Set size bound to 21.393939393939394 MB

The optimal value is 0.1897814831960858
A solution x is
[ 0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0523068904876709
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
Set size bound to 21.515151515151516 MB

The optimal value is 0.1897814831960858
A solution x is
[-0.  0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.  0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0523068904876709
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  1. -0.  0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
Set size bound to 21.636363636363637 MB

The optimal value is 0.18923139437877978
A solution x is
[ 0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  1.  0. -0. -0.  1.  0. -0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1. -0. -0.  1. -0.  1.  0.
  0.  0.  1.  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  1.  0.  0.  0.  1. -0. -0.  1.  0.  1.  0.  0. -0.  1.
 -0.  1.  0.  0.  0.  1. -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0. -0.  1.
 -0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 4), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.0523068904876709
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 4), 'layer4.2.conv3': (8, 8)}
Set size bound to 21.757575757575758 MB

The optimal value is 0.1878993196140044
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  0.  1. -0.  0.  1. -0.  0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0.  1.  0. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 8), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 4), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.05116832256317139
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  1.  0.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.  0. -0.  1.  0.  0.  1.
  0. -0.  1.  0. -0.  1.  0.  0.  1.  0.  1. -0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 4), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
Set size bound to 21.87878787878788 MB

The optimal value is 0.1873597060745027
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0.  0.  1.
 -0.  0.  1. -0.  0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0.
 -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 4), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 4), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 4), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.04821610450744629
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
Set size bound to 22.0 MB

The optimal value is 0.1806888635049262
A solution x is
[-0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  1.  0. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0. -0.  1.
 -0. -0.  1. -0.  1.  0. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0.  1.  0. -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.
 -0. -0.  1. -0. -0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1. -0. -0.  1.
 -0.  0.  1. -0. -0.  1. -0.  0.  1. -0. -0.  1.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 4), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 4), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 8)}

The optimal value is 0.04821610450744629
A solution x is
[-0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0.  1.  0.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.  0. -0.  1.
  0. -0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  0.  1.
  0.  0.  1.  0.  0.  1.  0.  0.  1.  0.  1.  0.]
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
evaluate_decision
 {'layer1.0.conv1': (8, 8), 'layer1.0.conv2': (8, 8), 'layer1.0.conv3': (8, 8), 'layer1.0.downsample.0': (8, 8), 'layer1.1.conv1': (8, 4), 'layer1.1.conv2': (8, 8), 'layer1.1.conv3': (8, 8), 'layer1.2.conv1': (8, 8), 'layer1.2.conv2': (8, 8), 'layer1.2.conv3': (8, 8), 'layer2.0.conv1': (8, 8), 'layer2.0.conv2': (8, 8), 'layer2.0.conv3': (8, 8), 'layer2.0.downsample.0': (8, 8), 'layer2.1.conv1': (8, 8), 'layer2.1.conv2': (8, 8), 'layer2.1.conv3': (8, 8), 'layer2.2.conv1': (8, 8), 'layer2.2.conv2': (8, 8), 'layer2.2.conv3': (8, 8), 'layer2.3.conv1': (8, 8), 'layer2.3.conv2': (8, 8), 'layer2.3.conv3': (8, 8), 'layer3.0.conv1': (8, 8), 'layer3.0.conv2': (8, 8), 'layer3.0.conv3': (8, 8), 'layer3.0.downsample.0': (8, 8), 'layer3.1.conv1': (8, 8), 'layer3.1.conv2': (8, 8), 'layer3.1.conv3': (8, 8), 'layer3.2.conv1': (8, 8), 'layer3.2.conv2': (8, 8), 'layer3.2.conv3': (8, 8), 'layer3.3.conv1': (8, 8), 'layer3.3.conv2': (8, 8), 'layer3.3.conv3': (8, 8), 'layer3.4.conv1': (8, 8), 'layer3.4.conv2': (8, 8), 'layer3.4.conv3': (8, 8), 'layer3.5.conv1': (8, 8), 'layer3.5.conv2': (8, 8), 'layer3.5.conv3': (8, 8), 'layer4.0.conv1': (8, 8), 'layer4.0.conv2': (8, 8), 'layer4.0.conv3': (8, 8), 'layer4.0.downsample.0': (8, 8), 'layer4.1.conv1': (8, 8), 'layer4.1.conv2': (8, 8), 'layer4.1.conv3': (8, 8), 'layer4.2.conv1': (8, 8), 'layer4.2.conv2': (8, 8), 'layer4.2.conv3': (8, 4)}
